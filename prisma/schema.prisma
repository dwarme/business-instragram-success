// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique(map: "User.email_unique")
  password  String
  firstName String
  lastName  String
  role      String
}

model Creative {
  id        String   @id @default(uuid())
  brandId   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  brand     Brand    @relation(fields: [brandId], references: [id], onDelete: Cascade)
  title     String
}

model Brand {
  id              String          @id @default(uuid())
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  name            String
  handle          String          @unique
  username        String          @unique
  profileImageUrl String
  coverImageUrl   String
  about           String
  businessSize    String
  objective       String
  product         String
  industry        String
  region          String
  creatives       Creative[]
  story           BrandStory      @relation(fields: [brandStoryId], references: [id])
  goal            BrandGoal       @relation(fields: [brandGoalId], references: [id])
  solutions       BrandSolution[]
  brandStoryId    String
  brandGoalId     String
}

model BrandStory {
  id            String           @id @default(uuid())
  brandId       String
  title         String
  description   String
  note          String
  noteReference String // The author of the note
  stats         BrandStoryStat[]
  brand         Brand[]
}

model BrandStoryStat {
  id           String     @id @default(uuid())
  brandStoryId String
  title        String
  description  String
  BrandStory   BrandStory @relation(fields: [brandStoryId], references: [id])
}

model BrandGoal {
  id            String  @id @default(uuid())
  title         String
  description   String
  note          String  // The author of the note
  noteReference String
  brand         Brand[]
}

model BrandSolution {
  id               String  @id @default(uuid())
  title            String
  contentHtml      String
  mediaContentType String
  creativeType     String //Story or Feed
  imageUrl         String?
  videoUrl         String?
  brand            Brand?  @relation(fields: [brandId], references: [id])
  brandId          String?
}
